//This is for the first assignment for CSC422

//by Jonas Frahm

import java.util.Scanner;
import java.util.ArrayList;

public class FrahmCSC422Ses1 {

    public static ArrayList<Pet> pets = new ArrayList<>();
    public static int petCount = 0;
    
    
    public static void main(String[] args) {
        //Must make my own Pet menu thing (like I've done before)
        
        Scanner scan = new Scanner(System.in);
        int decision;
        
        System.out.println("Pet Database Program.");
        
        
        do {
            decision = getUserChoice();
            
            String petName;
            int age;
            
            switch(decision) {
                case 1:
                    //view pets class here
                    viewPets();
            
                case 2:
                    //add pets
                    addPets();
            
                case 3:
                    //update pet
                    removePet();
            
                case 4:
                    //exit program
                    System.out.println("Goodbye!");
                    break;
            
                default:
                    System.out.println("Invalid input.");
                
            }
                
        } while (decision != 4);
        scan.close();
        
    }

    public static int getUserChoice() {
        Scanner s = new Scanner(System.in);
        
        System.out.println("\nWhat would you like to do?");
        
        System.out.println("1) View all pets");
        System.out.println("2) Add more pets");
        System.out.println("3) Remove a pet");
        System.out.println("4) Exit program");
        
        System.out.print("Your choice: ");
        
        try {
            return s.nextInt();
        }
        catch (Exception e) {
            System.out.println("Please enter a valid number.");
            s.nextLine();
            return -1;
        }
        
    }
    
    public static void viewPets() {
        if (pets.isEmpty()) {
            System.out.println("No pets in database.");
            return;
        }

        TableHeader();
        
        for (int i = 0; i < pets.size(); i++) {
            Table(i, pets.get(i).getName(), pets.get(i).getAge());
        }

        TableFooter(pets.size());
    }
    
    public static void addPets() {
        //int petListSize = 5;
            
        Scanner scan = new Scanner(System.in);
        int initialCount = petCount;
            
        while (true) {
            System.out.print("add pet (name, age) "); //input
            String input = scan.nextLine();
                
            if (input.equalsIgnoreCase("done")) {
                break;
            }
                
            String[] parts = input.split(" ");
            if (parts.length < 2) {
                System.out.println("Please enter both name and age.");
                continue;
            }
                
            String name = parts[0];
            int age;
                
            try {
                age = Integer.parseInt(parts[1]);
            }
            catch (NumberFormatException e) {
                System.out.println("Error: Age must be number.");
                continue;
            }
                
            if (age > 0 && age < 21) {
                pets.add(new Pet(name, age));
                petCount++;
            } 
            else {
                System.out.println("Error: " + age + " is not a valid age.");
            }  
        }
        System.out.println((petCount - initialCount) + " pets added.");
        
    }
    
    public static void removePet() {
        Scanner scan = new Scanner(System.in);
        
        System.out.print("Enter the pet ID to remove: ");
        
        try {
            int id = scan.nextInt();
            
            if (id < 0 || id >= pets.size()) {
                System.out.println("Error: ID " + id + " does not exist.");
            }
            else {
                Pet removedPet = pets.remove(id);
                petCount--;
                System.out.println(removedPet.getName() + " " + removedPet.getAge() + " is removed.");
            }
        }
        catch (Exception e) {
            System.out.println("Error: Invalid ID entered.");
            scan.nextLine();
        }
        
    }
    
    //might move to other file later
    public static void ListHeader() {
        System.out.println("+----------------------+");
        System.out.println("| ID | NAME      | AGE |");
        System.out.println("+----------------------+");
    }

    public static void List(int id) {
        System.out.printf("| %2d | %-10s | %3d |%n", id, name.length() > 10 ? name.substring(0,10) : name, age);
        //add list of pets with ID, name, and age
    }

    public static void ListFooter(int rows) {
        System.out.println("+----------------------+");
        System.out.println(rows + " rows in set.");
    }

}
